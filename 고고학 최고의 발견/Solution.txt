function solution(clockHands) {
    var answer = Infinity;
    const arr = [];
    //유효성 검사
    const valid = (r,c,arr) =>{
        if(r<0 || c<0 || r>=arr.length || c>=arr[0].length) return false;
        return true;
    }
    //첫 회전 경우의 수 만들기
    const firstLine = (index, now) =>{
        if(clockHands.length === index){
            arr.push(now);
            return;
        }
        for(let i=0; i<4; i++){
            firstLine(index+1, [...now,i])
        }
    }
    firstLine(0,[]);
    
    //회전
    const move = (r,c,arr) =>{
        arr[r][c]===3? arr[r][c]=0 : arr[r][c]++;
        if(valid(r+1,c,arr)){
            arr[r+1][c]===3? arr[r+1][c]=0:arr[r+1][c]++;
        }
        if(valid(r-1,c,arr)){
            arr[r-1][c]===3? arr[r-1][c]=0:arr[r-1][c]++;
        }
        if(valid(r,c+1,arr)){
            arr[r][c+1]===3? arr[r][c+1]=0:arr[r][c+1]++;
        }
        if(valid(r,c-1,arr)){
            arr[r][c-1]===3? arr[r][c-1]=0:arr[r][c-1]++;
        }
    }
    //첫 회전에 따라 밑에 시계도 돌리기.
    //마지막 줄이 000000...이면 성공
    for(let i=0; i<arr.length; i++){
        let newClock = clockHands.map(v => [...v]);
        let cnt = 0;
        for(let j=0; j<arr[i].length; j++){
            for(let k=0; k<arr[i][j]; k++){
                move(0,j,newClock);
                cnt++;
            }
        }
            for(let a=0; a<newClock.length-1; a++){
                for(let b=0; b<newClock[a].length; b++){
                    while(newClock[a][b] !== 0){
                        move(a+1,b,newClock);
                        cnt++;
                    }
                }
            }
        for(let b=0; b<newClock.length; b++){
            if(newClock[newClock.length-1][b] !==0) break;
            if(b === newClock.length-1) answer = Math.min(answer,cnt);
        }
    }
    return answer;
}